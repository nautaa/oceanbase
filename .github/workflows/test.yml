name: Compile

on:
  push:
    branches: [ master, test ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    strategy:
      matrix: 
        image: ['ubuntu:20.04']
    runs-on: ubuntu-20.04
    container: ${{ matrix.image }}
    steps:
    - uses: actions/checkout@v3

    - name: Install ubuntu environment
      shell: bash
      if: ${{ startsWith(matrix.image, 'ubuntu') }}
      run: |
        export DEBIAN_FRONTEND=noninteractive
        apt-get update
        apt-get install -y git wget rpm rpm2cpio cpio make build-essential binutils m4 libtool-bin libncurses5
      
    - name: Install centos environment
      shell: bash
      if: ${{ startsWith(matrix.image, 'centos') }}
      run: yum install -y sudo git wget rpm* cpio make glibc-devel glibc-headers binutils m4

    - name: Cache deps
      id: cache-deps
      uses: actions/cache@v3
      env:
        cache-name: cache-deps
      with:
        key: ${{ runner.os }}-build-${{ env.cache-name }}-el7.x86_64-${{ hashFiles('deps/init/oceanbase.el7.x86_64.deps') }}
        path: deps/3rd
        enableCrossOsArchive: true
    
    - name: Build init
      if: steps.cache-deps.outputs.cache-hit != 'true'
      run: |
        bash build.sh init
        echo "$PWD/deps/3rd/usr/local/oceanbase/devtools/bin/" >> $GITHUB_PATH
    - name: ccache
      uses: hendrikmuhs/ccache-action@v1.2
      with:
        max-size: 10G
      
    - name: Build project
      shell: bash
      run: |
        rm -rf build_debug 
        bash build.sh debug -DCMAKE_C_COMPILER_LAUNCHER=ccache -DCMAKE_CXX_COMPILER_LAUNCHER=ccache
        cd build_debug && make -j4 && cd -
        df -h
        du -sh ~/.ccache/
      env:
        SCCACHE_GHA_ENABLED: "true"
