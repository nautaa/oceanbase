name: Compile

on:
  workflow_dispatch:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v3
    - name: Free Disk Space
      uses: insightsengineering/disk-space-reclaimer@v1
      with:
        # this might remove tools that are actually needed,
        # if set to "true" but frees about 6 GB
        tools-cache: false

        # all of these default to true, but feel free to set to
        # "false" if necessary for your workflow
        android: true
        dotnet: true
        haskell: true
        large-packages: true
        swap-storage: true
        docker-images: true

    - name: Install ubuntu environment
      shell: bash
      run: |
        export DEBIAN_FRONTEND=noninteractive
        apt-get update
        apt-get install -y git wget rpm rpm2cpio cpio make build-essential binutils m4 libtool-bin libncurses5

    - name: Cache deps
      id: cache-deps
      uses: actions/cache@v3
      env:
        cache-name: cache-deps
      with:
        key: ${{ runner.os }}-build-${{ env.cache-name }}-el7.x86_64-${{ hashFiles('deps/init/oceanbase.el7.x86_64.deps') }}
        path: deps/3rd
        enableCrossOsArchive: true

    - name: Cache build
      id: cache-build
      uses: actions/cache@v3
      env:
        cache-name: cache-build
      with:
        key: ${{ runner.os }}-${{ env.cache-name }}-${{ matrix.image }}-el7.x86_64-${{ github.ref_name }}
        path: ~/.ccache
        enableCrossOsArchive: false
        restore-keys: |
          ${{ runner.os }}-${{ env.cache-name }}-${{ matrix.image }}-el7.x86_64
    
    - name: Build init
      if: steps.cache-deps.outputs.cache-hit != 'true'
      run: bash build.sh init
      
    - name: Build project
      shell: bash
      run: |
        rm -rf build_debug
        export CCACHE_LOGFILE=$PWD/ccache.log
        deps/3rd/usr/local/oceanbase/devtools/bin/ccache -z
        bash build.sh debug -DOB_USE_CCACHE=ON
        cd build_debug && make -j4 && cd -
        deps/3rd/usr/local/oceanbase/devtools/bin/ccache -s
        
    - if: ${{ runner.debug }}
      run: cat $PWD/ccache.log

